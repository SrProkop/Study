package parking.partOne

Бизнес задача: В городе всего 30 авто. 
Все авто надо запаковать на стоянку (предположим что она бесконечная) но на неё один въезд и выезд. 
То есть в один момент времени может въезжать и выезжать только по одному авто.

Техническое описание:
Каждый автомобиль это поток, въезд и выезд это 2 монитора (гуглим synchronized). 
На проезд выезда/въезда авто тратит 100мс, и на парковке стоит 300мс


package parking.partTwo

Так, теперь у этого задания усложним требования но по факту упростим задачу разработчику.
На парковке всего 10 парковочных мест


package parking.partThree

Тоже самое, что и в parking.partTwo, но с использованием Semaphore


package thread && package runnable

Эмулируем гонку:
10 велосипедистов стартуют гонку на 10км, у каждого разная скорость от 7 до 11 км в минуту.
Каждый велосипедист это поток, когда стартует и завершает гонку пишет в консоль.
Сначала реализуем задачу с помощью thread потом в отдельном пакете чере runnable

Всего призовых мест 5. Так что нет смысла ждать заезда всех велосипедистов. 
5 потоков завершились, остальные потоки прерываем и выводим таблицу
